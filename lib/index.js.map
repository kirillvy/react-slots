{"version":3,"sources":["webpack://react-slots-library/webpack/universalModuleDefinition","webpack://react-slots-library/webpack/bootstrap","webpack://react-slots-library/./src/utils/useScope.ts","webpack://react-slots-library/external \"react\"","webpack://react-slots-library/./src/utils/createSlot.tsx","webpack://react-slots-library/./src/FilterSlot/index.tsx","webpack://react-slots-library/./src/index.tsx","webpack://react-slots-library/./src/ConditionalSlot/index.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isConditionsComponent","entity","undefined","test","ScopeMap","Map","super","lastIndex","injectElement","child","childType","isValidElement","type","obj","displayName","displaySymbol","resultGet","this","index","pushLastIndex","set","push","includes","arr","every","evalSlot","includeSlots","reduce","filterSlot","excludeSlots","all","prev","vals","prevV","val","slot","forEach","cond","nonSlotted","exclude","el","objConditions","filter","elem","props","some","els","sort","a","b","map","scope","length","childrenCount","Children","count","result","SlottableElement","defaultElement","React","Fragment","children","renderAs","createElement","createSlot","Element","SlottedElement","Context","createContext","Before","After","Slot","multiple","defaultProps","passedProps","withContext","fallback","fallbackProps","childIs","childrenObj","injectSlot","Provider","contextChildren","cloneElement","childProps","res","headersList","footersList","headers","footers","element","SlotFactory","SubSlot","Consumer","SubSlotFactory","contextTypes","FilterSlotComponent","include","grouped","mapElements","sortElements","FilterSlotFactory","FilterSlot","useScope","useChildren","ConditionalSlot","createConditionalSlot","NonSlotted","elDisplay","IF","ELSEIF","ELSE","slotEvalIf","excludes","condition","conditional","Boolean","createDefaultConditionalSlot","typeSymbol","parent","elProps","newProps","scopeObj","evalResult","onIf","pastIf","cur","valid","If","ElseIf","Else","setTimeout","Conditional","ConditionalSubSlotFactory","ConditionalSlotElement"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-slots-library\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-slots-library\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-slots-library\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\nimport { ISortChildrenEl, ISlotComponent } from './createSlot';\n// import { IConditionalSlot } from '../ConditionalSlot';\n\n/**\n * Indexes React children for faster access by Slot components\n * @param scope - react children, in any format\n */\n\nexport interface IConditionsComponent {\n  /**\n   * Slottable component for filtering\n   */\n  slot: ISlotComponent<any>;\n  /**\n   * Slottable component test\n   */\n  test: <T = any>(props: T) => boolean;\n}\n\nexport type TConditionalSlot = ISlotComponent<any> | IConditionsComponent;\n\nexport const isConditionsComponent = (\n  entity: ISlotComponent<any> | IConditionsComponent,\n  ): entity is IConditionsComponent => {\n  return (entity as IConditionsComponent).test !== undefined;\n};\n\n/**\n * Scope object. Slottable elements are tracked as Element.DisplaySymbol\n * Custom components as Element.DisplayName.\n */\nclass ScopeMap extends Map<symbol | string, ISortChildrenEl[]> {\n  private lastIndex = -1;\n  constructor() {\n    super();\n  }\n  /**\n   * Injects element into the scope\n   * @param child JSX element to inject\n   */\n  public injectElement = (child: JSX.Element) => {\n    let childType = 'string';\n    if (React.isValidElement(child) && child.type !== undefined) {\n      const obj: any = child.type;\n      if (obj.hasOwnProperty('displayName')) {\n        childType = obj.displayName || 'string';\n      } else {\n        childType = obj;\n      }\n      if (obj.hasOwnProperty('displaySymbol')) {\n        childType = obj.displaySymbol;\n      }\n    }\n    const resultGet = this.get(childType);\n    const index = this.pushLastIndex();\n    if (resultGet === undefined) {\n      this.set(childType, [{index, child}]);\n    } else {\n      resultGet.push({index, child});\n      this.set(childType, resultGet);\n    }\n  }\n  /**\n   * Sorts elements by order of appearance\n   * @param els children object to sort into children\n   */\n  public sortElements(els: ISortChildrenEl[]): JSX.Element[] {\n    return els.sort((a, b) => a.index - b.index).map((el) => el.child);\n  }\n  /**\n   * Returns grouped elements, by order of appearance\n   * @param els children object to sort into children\n   */\n  public mapElements(els: ISortChildrenEl[]): JSX.Element[] {\n    return els.map((el) => el.child);\n  }\n  /**\n   * Tests whether object includes all conditional slots\n   * @param arr conditional slots for inclusion\n   */\n  public includes = (...arr: TConditionalSlot[]) => {\n    return arr.every(this.evalSlot(true));\n  }\n  /**\n   * Tests whether object excludes all conditional slots\n   * @param arr conditional slots for exclusion\n   */\n  public excludes(...arr: TConditionalSlot[]) {\n    return !arr.some(this.evalSlot());\n  }\n  /**\n   * Returns array of conditional slots included\n   * @param arr conditional slots for inclusion\n   */\n  public includeSlots = (arr: TConditionalSlot[]) => {\n    return arr.reduce(this.filterSlot(), [] as ISortChildrenEl[]);\n  }\n  /**\n   * Returns array of conditional slots without the excluded ones\n   * @param arr conditional slots for exclusion\n   * @param all include all elements including non-conditional slots\n   */\n  public excludeSlots = (arr: TConditionalSlot[], all?: boolean) => {\n    const prev: ISortChildrenEl[] = [];\n    const vals = arr.reduce((prevV, val) => {\n      const key = isConditionsComponent(val) ? val.slot.displaySymbol : val.displaySymbol as any;\n      prevV[key] = val;\n      return prevV;\n    }, {} as { [x: string]: TConditionalSlot });\n    this.forEach((val, key) => {\n      if (typeof key !== 'symbol' && all !== true) {\n        return;\n      }\n      const cond = vals[key as any];\n      if (cond) {\n        this.filterSlot(true)(prev, cond);\n      } else {\n        prev.push(...val);\n      }\n    });\n    return prev;\n  }\n  /**\n   * Returns all non-slot elements in scope\n   */\n  public nonSlotted = () => {\n    const prev: ISortChildrenEl[] = [];\n    this.forEach((val, key) => {\n      if (typeof key !== 'symbol') {\n        prev.push(...val);\n      }\n    });\n    return prev;\n  }\n  /**\n   * controls index on insert\n   */\n  private pushLastIndex = () => {\n    this.lastIndex += 1;\n    return this.lastIndex;\n  }\n  /**\n   * filters slots by params\n   */\n  private filterSlot = (exclude?: boolean) => (prev: ISortChildrenEl[], el: TConditionalSlot) => {\n    if (isConditionsComponent(el)) {\n      const { slot, test } = el;\n      const objConditions = this.get(slot.displaySymbol);\n      if (objConditions !== undefined) {\n        if (exclude) {\n          prev.push(...objConditions.filter((elem) => !test(elem.child.props)));\n        } else {\n          prev.push(...objConditions.filter((elem) => test(elem.child.props)));\n        }\n      }\n      return prev;\n    }\n    const obj = this.get(el.displaySymbol);\n    if (obj !== undefined && exclude !== true) {\n      prev.push(...obj);\n    }\n    return prev;\n  }\n  /**\n   * evals slots by params\n   */\n  private evalSlot = (includes?: boolean) => (el: TConditionalSlot) => {\n    if (isConditionsComponent(el)) {\n      const {slot, test} = el;\n      const obj = this.get(slot.displaySymbol);\n      if (includes) {\n        return obj !== undefined && obj.every((elem) => test(elem.child.props)) === true;\n      }\n      return obj !== undefined && obj.some((elem) => test(elem.child.props)) === true;\n    }\n    return this.get(el.displaySymbol) !== undefined;\n  }\n}\n/**\n * Creates scope object for work with slots\n * @param scope - React Children prop\n */\nconst useScope = (scope: any): ScopeMap => {\n  if (scope instanceof ScopeMap) {\n    return scope;\n  }\n  if (scope === undefined || scope.length === 0) {\n    return new ScopeMap();\n  }\n  const childrenCount = React.Children.count(scope);\n  const result = new ScopeMap();\n  if (childrenCount === 1) {\n    result.injectElement(scope);\n  } else if (childrenCount > 1) {\n      React.Children.forEach(scope, result.injectElement);\n  }\n  return result;\n};\n\nexport default useScope;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import * as React from 'react';\n\nimport useScope from './useScope';\n\nexport interface ISlot<T = any> {\n  /**\n   * Default children of element, if any. Otherwise, nothing will be shown.\n   */\n  children?: any;\n  /**\n   * Props that will always be rendered, no matter the scenario\n   */\n  props?: T;\n  /**\n   * default props to use when the default element is rendered\n   */\n  defaultProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * props passed to the element from the component containing the slot\n   */\n  passedProps?: T;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Slottable component test\n   */\n  test?: <S = any>(props: S) => boolean;\n  /**\n   * Display all if multiple slots are passed\n   */\n  multiple?: boolean;\n  /**\n   * Components are composed through their immediate children instead of\n   * children of element\n   */\n  withContext?: boolean;\n  /**\n   * fallback to use if slot is not used\n   */\n  fallback?: any;\n  /**\n   * default props to use with default element\n   */\n  fallbackProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * Designate the children prop as the default element, the fallback element or both\n   */\n  childIs?: 'fallback' | 'default' | 'both';\n  /**\n   * Component is always rendered.\n   */\n  unconditional?: boolean;\n}\n\ntype TAny = any;\n\ninterface IRenderAs extends TAny {\n  /**\n   * Element injected for rendering instead of default. Any props will have to be compatible.\n   */\n  renderAs: React.ComponentType | keyof JSX.IntrinsicElements;\n}\n\nexport interface ISubSlot<T> extends Partial<ISlot<T>> {\n  scope: React.Context<any>;\n}\n\nexport interface ISlotElement<T> extends React.FunctionComponent<ISlot<T>> {\n  displaySymbol: symbol;\n}\n\nexport interface ISubSlotElement<T> extends React.FunctionComponent<ISubSlot<T>> {\n  displaySymbol: symbol;\n}\n\nexport interface ISlotComponentBase<T = any> extends React.FunctionComponent<T | IRenderAs | {children?: any}> {\n  Context: React.Context<any>;\n  displaySymbol: symbol;\n}\n\nexport interface ISlotComponent<T = any> extends ISlotComponentBase<T> {\n  Slot: ISlotElement<T>;\n  SubSlot: ISlotElement<T>;\n  Before: IHeaderFooter;\n  After: IHeaderFooter;\n}\n\ninterface IOverloadCreateSlot {\n  (Element: keyof JSX.IntrinsicElements | React.ComponentType): ISlotComponent;\n  <T extends keyof JSX.IntrinsicElements>(\n    Element: T | React.ComponentType,\n  ): ISlotComponent<Partial<JSX.IntrinsicElements[T]>>;\n  <T extends {}>(Element?: React.ComponentType): ISlotComponent<T>;\n  <S extends keyof JSX.IntrinsicElements, T extends {}>(\n    Element?: React.ComponentType,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n  <T extends {}, S extends keyof JSX.IntrinsicElements>(\n    Element?: React.ComponentType,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n}\n\nexport interface IHeaderFooter extends React.FunctionComponent {\n  displaySymbol: symbol;\n  typeSymbol: symbol;\n}\n\nexport interface ISortChildrenEl {\n  index: number;\n  child: JSX.Element;\n}\n\nexport type SlotType<T = {}, S = {}> =\n  T extends {} ? S extends keyof JSX.IntrinsicElements ? T & Partial<JSX.IntrinsicElements[S]> : T :\n  T extends keyof JSX.IntrinsicElements ? S extends {} ? S & Partial<JSX.IntrinsicElements[T]> :\n   Partial<JSX.IntrinsicElements[T]> : any;\n\nconst SlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISlot<T>> => (\n  { scope, children: defaultElement, multiple = false, defaultProps, passedProps, withContext,\n    fallback, fallbackProps, props, childIs, test },\n) => {\n  const childrenObj = useScope(scope);\n  const injectSlot = (child: JSX.Element, i?: number) => {\n    if (withContext === true  && defaultElement !== undefined) {\n      if (childIs === 'fallback') {\n        return null;\n      }\n      if (Element.Context.Provider === undefined) {\n        return null;\n      }\n      const contextChildren = React.cloneElement(child, {...props, ...passedProps });\n      return React.cloneElement(child, { key: i, ...props, ...passedProps }, (\n      <Element.Context.Provider\n        key={i}\n        value={useScope(contextChildren.props.children)}\n      >\n      {defaultElement}\n      </Element.Context.Provider>\n      ));\n    }\n    const childProps: any = child.props;\n    if (child.props === undefined) {\n      return child;\n    }\n    if (childProps.hasOwnProperty('children')) {\n      return React.cloneElement(child, { key: i, ...props, ...passedProps });\n    }\n    return React.cloneElement(child, { key: i, ...props, ...defaultProps, ...passedProps }, defaultElement);\n  };\n  const res = childrenObj.get(Element.displaySymbol);\n  const headersList = childrenObj.get(Element.Before.displaySymbol) || [];\n  const footersList = childrenObj.get(Element.After.displaySymbol) || [];\n  const headers = headersList.map((el) => el.child);\n  const footers = footersList.map((el) => el.child);\n  if (res === undefined) {\n    if ((childIs === 'fallback' || childIs === 'both') && defaultElement !== undefined) {\n      return React.cloneElement(defaultElement, fallbackProps);\n    }\n    if (fallback !== undefined) {\n      return React.cloneElement(fallback, fallbackProps);\n    }\n    return <>{headers}{footers}</>;\n  }\n  if (multiple === true) {\n    let element = res.reduce((prev, {index, child}) => {\n      const el = injectSlot(child, index);\n      if (el !== null) {\n        prev.push(el);\n      }\n      return prev;\n    }, [] as Array<React.FunctionComponentElement<any>>);\n    if (test !== undefined) {\n      element = element.filter((el) => test(el.props));\n    }\n    return <>{headers}{element}{footers}</>;\n  }\n  const { child } = res[0];\n  return <>{headers}{injectSlot(child)}{footers}</>;\n};\n\nconst SubSlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot {...props} scope={value}/>}</Context.Consumer>;\n};\n\nconst SlottableElement: (\n    defaultElement?: React.ComponentType | keyof JSX.IntrinsicElements,\n  ) => React.FC<IRenderAs> = (defaultElement = React.Fragment) => (\n  {children, renderAs, ...props},\n  ) => React.createElement(renderAs || defaultElement, props, children);\n\n/**\n * Slot constructor\n * @param {React.ComponentType<any>} [Element=React.Fragment] - Element for slotting, default is fragment\n */\nexport const createSlot: IOverloadCreateSlot = <T extends {} = {}, S extends {} = {}>(\n  Element: React.ComponentType | keyof JSX.IntrinsicElements = React.Fragment,\n  ) => {\n    type CurType = SlotType<T, S>;\n    const SlottedElement = SlottableElement(Element) as ISlotComponent<CurType>;\n    SlottedElement.Context = React.createContext(null);\n    SlottedElement.displaySymbol = Symbol();\n    SlottedElement.Before = SlottableElement() as IHeaderFooter;\n    SlottedElement.Before.displaySymbol = Symbol();\n    SlottedElement.After = SlottableElement() as IHeaderFooter;\n    SlottedElement.After.displaySymbol = Symbol();\n    SlottedElement.Slot = SlotFactory<CurType>(SlottedElement) as ISlotElement<CurType>;\n    SlottedElement.Slot.displaySymbol = Symbol();\n    SlottedElement.SubSlot = SubSlotFactory<CurType>(SlottedElement) as ISubSlotElement<CurType>;\n    SlottedElement.SubSlot.displaySymbol = Symbol();\n    if (typeof Element !== 'string') {\n      SlottedElement.defaultProps = Element.defaultProps;\n      SlottedElement.contextTypes = Element.contextTypes;\n    }\n    SlottedElement.Slot.displayName = 'Subcomponent.Slot';\n    SlottedElement.displayName = `Subcomponent.SlottedElement`;\n    SlottedElement.SubSlot.displayName = 'Subcomponent.SubSlot';\n    return SlottedElement;\n};\n\nexport default createSlot;\n","import * as React from 'react';\nimport { ISortChildrenEl } from '../utils/createSlot';\nimport useScope, {TConditionalSlot} from '../utils/useScope';\n\ninterface IFilterSlot {\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  exclude?: TConditionalSlot[];\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  include?: TConditionalSlot[];\n  /**\n   * Filter out all slottable components, overrides include and exclude properties\n   */\n  all?: boolean;\n  /**\n   * Group all elements in order added.\n   */\n  grouped?: boolean;\n}\n\ninterface IFilterSubSlot extends IFilterSlot {\n  scope: React.Context<any>;\n}\n\ninterface IFilterSlotComponent extends React.FC<IFilterSlot> {\n  SubSlot: React.FunctionComponent<IFilterSubSlot>;\n}\n\nconst FilterSlotFactory = (Element: React.FC<IFilterSlot>): React.FC<IFilterSubSlot> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element {...props} scope={value} />}</Context.Consumer>;\n};\n\nconst FilterSlotComponent = ({ scope, exclude, include, grouped, all }: IFilterSlot) => {\n  const childrenObj = useScope(scope);\n  let prev = [] as ISortChildrenEl[];\n  if (exclude) {\n    prev = childrenObj.excludeSlots(exclude, all);\n  } else if (include) {\n    prev = childrenObj.includeSlots(include);\n    if (all) {\n      prev.push(...childrenObj.nonSlotted());\n    }\n  }\n  if (grouped === true) {\n    return <>{childrenObj.mapElements(prev)}</>;\n  }\n  return <>{childrenObj.sortElements(prev)}</>;\n};\n\nFilterSlotComponent.SubSlot = FilterSlotFactory(FilterSlotComponent);\n\nconst FilterSlot: IFilterSlotComponent = FilterSlotComponent;\n\nexport default FilterSlot;\n","import useScope from './utils/useScope';\nimport createSlot from './utils/createSlot';\nimport ConditionalSlot, {createConditionalSlot} from './ConditionalSlot';\nimport FilterSlot from './FilterSlot';\n\nexport {\n  FilterSlot,\n  FilterSlot as NonSlotted,\n  useScope,\n  useScope as useChildren,\n  createSlot,\n  createConditionalSlot,\n  ConditionalSlot,\n};\n\nexport default createSlot;\n","import React from 'react';\nimport createSlot, { ISlotComponentBase, IHeaderFooter, SlotType, ISlotComponent,\n  ISubSlotElement, ISubSlot, ISlotElement, ISlot } from '../utils/createSlot';\nimport useScope, {TConditionalSlot} from '../utils/useScope';\nimport FilterSlot from '../FilterSlot';\n\nexport interface IConditionalSlotBase {\n  children?: any;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope?: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  excludes?: TConditionalSlot[];\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  includes?: TConditionalSlot[];\n  /**\n   * Truthy eval of conditions for implementations.\n   */\n  condition?: any;\n}\n\nexport interface IConditionsComponent {\n  /**\n   * Slottable component for filtering\n   */\n  slot: ISlotComponent<any>;\n  /**\n   * Slottable component test\n   */\n  test: <T = any>(props: T) => boolean;\n}\n\nexport interface IConditionalSlot<T = {}> extends React.FC<IConditionalSlotBase & T> {\n  If: IConditionalSlot;\n  ElseIf: IConditionalSlot;\n  Else: IConditionalSlot;\n  displaySymbol: symbol;\n  typeSymbol: symbol;\n}\n\nconst elDisplay = Symbol();\nconst IF = Symbol();\nconst ELSEIF = Symbol();\nconst ELSE = Symbol();\n\nconst slotEvalIf = ({scope, excludes, includes, condition}: IConditionalSlotBase) => {\n  const childrenObj = useScope(scope);\n  const include = (scope && includes) ? childrenObj.includes(...includes) : true;\n  const exclude = (scope && excludes) ? childrenObj.excludes(...excludes) : true;\n  const conditional = condition !== undefined ? Boolean(condition) : true;\n  return include && exclude && conditional;\n};\n\nexport function createDefaultConditionalSlot(\n  Element: React.ComponentType = React.Fragment,\n  typeSymbol: symbol = IF,\n  parent?: IConditionalSlot,\n  ): IConditionalSlot {\n  function ConditionalSlot(props: IConditionalSlotBase) {\n    const {children, scope, excludes, includes, condition, ...newProps} = props;\n    const elProps = Element === React.Fragment ? {} : {scope, ...newProps};\n    const scopeObj = useScope(children);\n    const evalResult = parent === undefined ? slotEvalIf({scope, excludes, includes, condition}) : true;\n    const obj = scopeObj.get(ConditionalSlot.displaySymbol);\n    let res: React.ReactNode = null;\n    let [onIf, pastIf] = [false, false];\n    if (obj !== undefined) {\n      for (let i = 0; i < obj.length; i++) {\n        const cur: any = obj[i].child;\n        const valid = slotEvalIf(cur.props);\n        if (valid) {\n          res = cur;\n        }\n        if (\n          onIf === false\n          && pastIf === false\n          && cur.type.typeSymbol === ConditionalSlot.If.typeSymbol\n          ) {\n          onIf = true;\n          if (valid) {\n            break;\n          }\n          continue;\n        }\n        if (cur.type.typeSymbol === ConditionalSlot.ElseIf.typeSymbol) {\n          pastIf = true;\n          if (valid) {\n            break;\n          }\n          continue;\n        }\n        if (cur.type.typeSymbol === ConditionalSlot.Else.typeSymbol) {\n          res = cur;\n          break;\n        }\n      }\n    }\n    if (evalResult) {\n      if (onIf && res !== null && res !== undefined) {\n        return React.createElement(Element, elProps,\n          <FilterSlot key={0} scope={scopeObj} exclude={[ConditionalSlot as any]} all={true} />,\n          res,\n        );\n      }\n      return React.createElement(Element, elProps,\n        <FilterSlot key={0} scope={scopeObj} exclude={[ConditionalSlot as any]} all={true} />,\n      );\n    }\n    if (res !== null && onIf === false) {\n      return React.createElement(Element, elProps,\n        res,\n      );\n    }\n    return null;\n  }\n  ConditionalSlot.displaySymbol = elDisplay;\n  ConditionalSlot.typeSymbol = typeSymbol;\n  if (parent === undefined) {\n    const If = createDefaultConditionalSlot(React.Fragment, IF, ConditionalSlot);\n    const Else = createDefaultConditionalSlot(React.Fragment, ELSEIF, ConditionalSlot);\n    const ElseIf = createDefaultConditionalSlot(React.Fragment, ELSE, ConditionalSlot);\n    ConditionalSlot.If = If;\n    ConditionalSlot.ElseIf = Else;\n    ConditionalSlot.Else = ElseIf;\n  } else {\n    setTimeout(() => {\n      ConditionalSlot.If = parent.If;\n      ConditionalSlot.ElseIf = parent.Else;\n      ConditionalSlot.Else = parent.ElseIf;\n    }, 0);\n  }\n  return ConditionalSlot;\n}\n\ninterface IHeaderFooterConditional extends IHeaderFooter {\n  Conditional: IConditionalSlot;\n}\n\ninterface ISlotConditional<T> extends ISlotElement<T> {\n  displaySymbol: symbol;\n  Conditional: IConditionalSlot<T & ISlot>;\n}\n\ninterface ISubSlotConditional<T> extends ISubSlotElement<T> {\n  Conditional: React.FC<ISubSlot<T>>;\n}\n\ninterface IHeaderFooterConditional extends IHeaderFooter {\n  Conditional: IConditionalSlot;\n}\n\ninterface IConditionalSlotComponent<T = any> extends ISlotComponentBase<T> {\n  Slot: ISlotConditional<T>;\n  SubSlot: ISubSlotConditional<T>;\n  Before: IHeaderFooterConditional;\n  After: IHeaderFooterConditional;\n}\ninterface IOverloadCreateConditionalSlot {\n  (Element: keyof JSX.IntrinsicElements | React.ComponentType): IConditionalSlotComponent;\n  <T extends keyof JSX.IntrinsicElements>(\n    Element: T | React.ComponentType,\n  ): IConditionalSlotComponent<Partial<JSX.IntrinsicElements[T]>>;\n  <T extends {}>(Element?: React.ComponentType): IConditionalSlotComponent<T>;\n  <S extends keyof JSX.IntrinsicElements, T extends {}>(\n    Element?: React.ComponentType,\n  ): IConditionalSlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n  <T extends {}, S extends keyof JSX.IntrinsicElements>(\n    Element?: React.ComponentType,\n  ): IConditionalSlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n}\nconst ConditionalSubSlotFactory = <T extends {}>(Element: IConditionalSlotComponent): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot.Conditional {...props} scope={value}/>}</Context.Consumer>;\n};\n\nexport const createConditionalSlot: IOverloadCreateConditionalSlot = <T extends {} = {}, S extends {} = {}>(\n  Element: React.ComponentType | keyof JSX.IntrinsicElements = React.Fragment,\n  ) => {\n  type CurType = SlotType<T, S>;\n  const SlottedElement = createSlot(Element) as IConditionalSlotComponent<CurType>;\n  SlottedElement.Slot.Conditional = createDefaultConditionalSlot(\n    SlottedElement.Slot as React.ComponentType) as IConditionalSlot<CurType & ISlot<any>>;\n  SlottedElement.SubSlot.Conditional = ConditionalSubSlotFactory<CurType>(SlottedElement);\n  SlottedElement.Before.Conditional = createDefaultConditionalSlot(SlottedElement.Before as React.ComponentType);\n  SlottedElement.Before.Conditional.displaySymbol = SlottedElement.Before.displaySymbol;\n  SlottedElement.After.Conditional = createDefaultConditionalSlot(SlottedElement.After as React.ComponentType);\n  SlottedElement.After.Conditional.displaySymbol = SlottedElement.After.displaySymbol;\n  return SlottedElement;\n};\n\nconst ConditionalSlotElement: IConditionalSlot = createDefaultConditionalSlot();\n\nexport default ConditionalSlotElement;\n"],"sourceRoot":""}