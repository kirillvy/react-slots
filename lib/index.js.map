{"version":3,"sources":["webpack://react-slots-library/webpack/universalModuleDefinition","webpack://react-slots-library/webpack/bootstrap","webpack://react-slots-library/./src/index.tsx","webpack://react-slots-library/external \"react\"","webpack://react-slots-library/./src/NonSlotted/index.tsx","webpack://react-slots-library/./src/ConditionalSlot/index.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ConditionalSlot","createSlot","Element","React","Fragment","SlottedElement","children","createElement","props","Context","createContext","displaySymbol","Slot","scope","multiple","defaultProps","passedProps","withContext","fallback","fallbackProps","childIs","childrenObj","undefined","$$isSlottedChildren","useChildren","injectSlot","child","defaultElement","Provider","contextChildren","cloneElement","res","element","reduce","prev","index","el","push","SlotFactory","Conditional","createConditionalSlot","SubSlot","Consumer","SubSlotFactory","ConditionalSubSlotFactory","contextTypes","displayName","propTypes","length","childrenCount","Children","count","result","childType","isValidElement","type","obj","forEach","NonSlotted","resObject","NonSlottedComponent","exclude","include","all","rest","includeEls","excludeEls","getOwnPropertySymbols","cur","concat","sort","a","b","map","elDisplay","evalIf","excludes","includes","condition","every","conditional","Boolean","parent","scopeObj","onIf","valid","typeSymbol","ElseIf","Else","If","elProps","newProps","ConditionalSlotElement"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-slots-library\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-slots-library\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-slots-library\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\n\nimport ConditionalSlot, {\n  IConditionalSlot, IConditionalSlotBase, createConditionalSlot,\n} from './ConditionalSlot';\n\ninterface ISlot<T> {\n  /**\n   * Default children of element, if any. Otherwise, nothing will be shown.\n   */\n  children?: any;\n  /**\n   * default props to use when the default element is rendered\n   */\n  defaultProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * props passed to the element from the component containing the slot\n   */\n  passedProps?: T;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Display all if multiple slots are passed\n   */\n  multiple?: boolean;\n  /**\n   * Components are composed through their immediate children instead of\n   * children of element\n   */\n  withContext?: boolean;\n  /**\n   * fallback to use if slot is not used\n   */\n  fallback?: any;\n  /**\n   * default props to use with default element\n   */\n  fallbackProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * Designate the children prop as the default element, the fallback element or both\n   */\n  childIs?: 'feedback' | 'default' | 'both';\n}\n\ninterface ISubSlot<T> extends Partial<ISlot<T>> {\n  scope: React.Context<any>;\n}\n\nexport interface ISlotConditional<T> extends React.FunctionComponent<T> {\n  displaySymbol: symbol;\n  Conditional: IConditionalSlot<T>;\n}\n\nexport interface ISubSlotConditional<T> extends React.FunctionComponent<T> {\n  displaySymbol: symbol;\n  Conditional: React.FC<T & IConditionalSlotBase>;\n}\n\nexport interface ISlotComponent<T> extends React.FunctionComponent<T> {\n  Context: React.Context<any>;\n  displaySymbol: symbol;\n  Slot: ISlotConditional<ISlot<T>>;\n  SubSlot: ISubSlotConditional<ISubSlot<T>>;\n}\n\ninterface IOverloadCreateSlot {\n  <T extends {}, S extends keyof JSX.IntrinsicElements>(\n    Element?: React.ComponentType<T & Partial<JSX.IntrinsicElements[S]>>,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n  <S extends keyof JSX.IntrinsicElements, T extends {}>(\n    Element?: React.ComponentType<T & Partial<JSX.IntrinsicElements[S]>>,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]>>;\n  <T extends keyof JSX.IntrinsicElements>(\n    Element: T | React.ComponentType<Partial<JSX.IntrinsicElements[T]>>,\n  ): ISlotComponent<Partial<JSX.IntrinsicElements[T]>>;\n  <T extends {}>(Element?: React.ComponentType): ISlotComponent<T>;\n}\n\nexport interface IIndexedChildren {\n  [x: string]: ISortChildrenEl[];\n}\n\nexport interface ISortChildrenEl {\n  index: number;\n  child: JSX.Element;\n}\n\ntype SlotType<T = {}, S = {}> =\n  T extends {} ? S extends keyof JSX.IntrinsicElements ? T & Partial<JSX.IntrinsicElements[S]> : T :\n  T extends keyof JSX.IntrinsicElements ? S extends {} ? S & Partial<JSX.IntrinsicElements[T]> :\n   Partial<JSX.IntrinsicElements[T]> : any;\n\nconst SlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISlot<T>> => (\n  { scope, children: defaultElement, multiple = false, defaultProps, passedProps, withContext,\n    fallback, fallbackProps, childIs },\n) => {\n  let childrenObj = scope as IIndexedChildren;\n  if (typeof scope !== 'object' || scope.$$isSlottedChildren === undefined) {\n    childrenObj = useChildren(scope);\n  }\n  const injectSlot = (child: JSX.Element, i?: number) => {\n    if (withContext === true  && defaultElement !== undefined) {\n      if (childIs === 'feedback') {\n        return null;\n      }\n      if (Element.Context.Provider === undefined) {\n        return null;\n      }\n      const contextChildren = React.cloneElement(child, {...passedProps });\n      return React.cloneElement(child, { key: i, ...passedProps }, (\n      <Element.Context.Provider\n        key={i}\n        value={useChildren(contextChildren.props.children)}\n      >\n      {defaultElement}\n      </Element.Context.Provider>\n      ));\n    }\n    const props: any = child.props;\n    if (props.hasOwnProperty('children')) {\n      return React.cloneElement(child, { key: i, ...passedProps });\n    } else {\n      return React.cloneElement(child, { key: i, ...defaultProps, ...passedProps }, defaultElement);\n    }\n  };\n  const res = childrenObj[Element.displaySymbol as any];\n  if (res === undefined) {\n    if ((childIs === 'feedback' || childIs === 'both') && defaultElement !== undefined) {\n      return React.cloneElement(defaultElement, fallbackProps);\n    }\n    if (fallback !== undefined) {\n      return React.cloneElement(fallback, fallbackProps);\n    }\n    return null;\n  } else {\n    if (multiple === true) {\n      const element = res.reduce((prev, {index, child}) => {\n        const el = injectSlot(child, index);\n        if (el !== null) {\n          prev.push(el);\n        }\n        return prev;\n      }, [] as Array<React.FunctionComponentElement<any>>);\n      return <>{element}</>;\n    } else {\n      const {child} = res[0];\n      return injectSlot(child);\n    }\n  }\n};\n\nconst SubSlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot {...props} scope={value}/>}</Context.Consumer>;\n};\n\nconst ConditionalSubSlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot.Conditional {...props} scope={value}/>}</Context.Consumer>;\n};\n\n/**\n * Slot constructor\n * @param {React.ComponentType<any>} [Element=React.Fragment] - Element for slotting, default is fragment\n */\nexport const createSlot: IOverloadCreateSlot = <T extends {} = {}, S extends {} = {}>(\n  Element: React.ComponentType | keyof JSX.IntrinsicElements = React.Fragment,\n  ) => {\n    type CurType = SlotType<T, S>;\n    const SlottedElement = (\n      ({ children, ...props }: any) => React.createElement(Element, props, children)\n      ) as ISlotComponent<CurType>;\n    SlottedElement.Context = React.createContext(null);\n    SlottedElement.displaySymbol = Symbol();\n    SlottedElement.Slot = SlotFactory<CurType>(SlottedElement) as ISlotConditional<ISlot<CurType>>;\n    SlottedElement.Slot.displaySymbol = Symbol();\n    SlottedElement.Slot.Conditional = createConditionalSlot(SlottedElement.Slot as React.ComponentType);\n    SlottedElement.SubSlot = SubSlotFactory<CurType>(SlottedElement) as ISlotConditional<ISubSlot<CurType>>;\n    SlottedElement.SubSlot.displaySymbol = Symbol();\n    SlottedElement.SubSlot.Conditional = ConditionalSubSlotFactory<CurType>(SlottedElement);\n    if (typeof Element !== 'string') {\n      SlottedElement.defaultProps = Element.defaultProps;\n      SlottedElement.contextTypes = Element.contextTypes;\n      SlottedElement.Slot.displayName = `${Element.displayName}.Slot`;\n      SlottedElement.propTypes = Element.propTypes;\n      if (Element.displayName === undefined) {\n        SlottedElement.Slot.displayName = 'Subcomponent.Slot';\n      }\n    } else {\n      SlottedElement.Slot.displayName = `${Element}.Slot`;\n      SlottedElement.displayName = `${SlottedElement.displayName}.SlottedElement`;\n      if (Element === undefined) {\n        SlottedElement.Slot.displayName = 'Subcomponent.Slot';\n        SlottedElement.displayName = `Subcomponent.SlottedElement`;\n      }\n    }\n    SlottedElement.SubSlot.displayName = 'SubSlot';\n    SlottedElement.SubSlot.displayName = 'SubSlot';\n    return SlottedElement;\n};\n\n/**\n * Indexes React children for faster access by Slot components\n * @param scope - react children, in any format\n */\nexport const useChildren = (scope: any): IIndexedChildren => {\n  if (scope === undefined || scope.length === 0) {\n    return {};\n  }\n  const childrenCount = React.Children.count(scope);\n  const result: IIndexedChildren = {};\n  const injectSlot = (child: JSX.Element, index: number) => {\n    let childType = 'rest';\n    if (React.isValidElement(child) && child.type !== undefined) {\n      const obj: any = child.type;\n      if (obj.hasOwnProperty('displayName')) {\n        childType = obj.displayName || 'rest';\n      }\n      if (obj.hasOwnProperty('displaySymbol')) {\n        childType = obj.displaySymbol;\n      }\n    }\n    if (result[childType] === undefined) {\n      result[childType] = [];\n    }\n    result[childType].push({index, child});\n  };\n  if (childrenCount === 1) {\n    injectSlot(scope, 0);\n  } else if (childrenCount > 1) {\n      React.Children.forEach(scope, injectSlot);\n  }\n  result.$$isSlottedChildren = [];\n  return result;\n};\n\nimport NonSlotted from './NonSlotted';\nexport { NonSlotted };\nexport { ConditionalSlot };\n\nexport default createSlot;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import * as React from 'react';\nimport {ISlotComponent, IIndexedChildren, useChildren, ISortChildrenEl} from '../index';\nimport { IConditionalSlot } from '../ConditionalSlot';\n\ninterface INonSlotted {\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  exclude?: Array<ISlotComponent<any> | IConditionalSlot>;\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  include?: Array<ISlotComponent<any>>;\n  /**\n   * Filter out all slottable components, overrides include and exclude properties\n   */\n  all?: boolean;\n}\n\ninterface INonSubSlotted extends INonSlotted {\n  scope: React.Context<any>;\n}\n\ninterface INonSlotComponent extends React.FC<INonSlotted> {\n  SubSlot: React.FunctionComponent<INonSubSlotted>;\n}\n\nconst NonSlotFactory = (Element: React.FC<INonSlotted>): React.FC<INonSubSlotted> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element {...props} scope={value}/>}</Context.Consumer>;\n};\n\nexport const resObject = (res?: Array<ISlotComponent<any> | IConditionalSlot>) => {\n  if (res === undefined) {\n    return {};\n  }\n  return res.reduce((prev, el) => {\n    const childType: string = el.displaySymbol as any;\n    if (prev[childType] === undefined) {\n      prev[childType] = true;\n    }\n    return prev;\n  }, {} as { [x: string]: boolean});\n};\n\nconst NonSlottedComponent = ({ scope, exclude, include, all }: INonSlotted) => {\n  let childrenObj = scope as IIndexedChildren;\n  if (typeof childrenObj !== 'object' || childrenObj.$$isSlottedChildren === undefined) {\n    childrenObj = useChildren(scope);\n  }\n  let rest: ISortChildrenEl[] = [];\n  if ((exclude && all !== false) || (include && all === true)) {\n    rest = childrenObj.rest || [];\n  }\n  const includeEls = resObject(include);\n  const excludeEls = resObject(exclude);\n  const ignoreSlot = (el: symbol) => {\n    if (include) {\n      if (includeEls[el as any]) {\n        return true;\n      }\n      return false;\n    }\n    if (exclude) {\n      if (excludeEls[el as any]) {\n        return false;\n      }\n      return true;\n    }\n  };\n  const children = Object.getOwnPropertySymbols(childrenObj).reduce((prev, cur) => {\n    const res = ignoreSlot(cur);\n    if (res === true) {\n      return prev.concat(childrenObj[cur as any]);\n    }\n    return prev;\n  }, rest)\n  .sort((a, b) => a.index - b.index)\n  .map((el) => el.child);\n  return <>{children}</>;\n};\n\nNonSlottedComponent.SubSlot = NonSlotFactory(NonSlottedComponent);\n\nconst NonSlotted: INonSlotComponent = NonSlottedComponent;\n\nexport default NonSlotted;\n","import React, { useState } from 'react';\nimport {ISlotComponent, IIndexedChildren, useChildren} from '../index';\nimport NonSlotted from '../NonSlotted';\nimport {ISlotConditional} from '..';\n\nexport interface IConditionalSlotBase {\n  children?: any;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope?: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  excludes?: Array<ISlotComponent<any>>;\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  includes?: Array<ISlotComponent<any>>;\n  /**\n   * Truthy eval of conditions for implementations.\n   */\n  condition?: any;\n}\n\nexport interface IConditionalSlot<T = {}> extends React.FC<IConditionalSlotBase & T> {\n  If: IConditionalSlot;\n  ElseIf: IConditionalSlot;\n  Else: IConditionalSlot;\n  displaySymbol: symbol;\n  typeSymbol: symbol;\n}\n\nconst elDisplay = Symbol();\n\nconst evalIf = ({scope, excludes, includes, condition}: IConditionalSlotBase) => {\n  let childrenObj = scope as IIndexedChildren;\n  if (typeof childrenObj !== 'object' || childrenObj.$$isSlottedChildren === undefined) {\n    childrenObj = useChildren(scope);\n  }\n  const include = scope && includes ? includes.every((el) => childrenObj[el.displaySymbol as any] !== undefined) : true;\n  const exclude = scope && excludes ? excludes.every((el) => childrenObj[el.displaySymbol as any] === undefined) : true;\n  const conditional = condition !== undefined ? Boolean(condition) : true;\n  return include && exclude && conditional;\n};\n\nexport function createConditionalSlot(\n  Element: React.ComponentType = React.Fragment, parent?: IConditionalSlot,\n  ): IConditionalSlot {\n  function ConditionalSlot(props: IConditionalSlotBase) {\n    const {children, scope, excludes, includes, condition, ...newProps} = props;\n    const scopeObj = useChildren(children);\n    const evalResult = parent === undefined ? evalIf({scope, excludes, includes, condition}) : true;\n    if (evalResult) {\n      const obj = scopeObj[ConditionalSlot.displaySymbol as any];\n      let res: React.ReactNode = null;\n      if (obj !== undefined) {\n        for (let i = 0, onIf = false; i < obj.length; i++) {\n          const cur: any = obj[i].child;\n          const valid = evalIf(cur.props);\n          if (valid) {\n            res = cur;\n          }\n          if (onIf === false) {\n            if (valid && cur.type.typeSymbol === ConditionalSlot.If.typeSymbol) {\n              break;\n            }\n            onIf = true;\n            continue;\n          }\n          if (cur.type.typeSymbol === ConditionalSlot.ElseIf.typeSymbol) {\n            if (valid) {\n              break;\n            }\n            continue;\n          }\n          if (cur.type.typeSymbol === ConditionalSlot.Else.typeSymbol) {\n            res = cur;\n            break;\n          }\n        }\n      }\n      const elProps = Element === React.Fragment ? {} : {scope, ...newProps};\n      return React.createElement(Element, elProps, [\n        <NonSlotted key={0} scope={children} exclude={[ConditionalSlot]} />,\n        res,\n      ]);\n    }\n    return null;\n  }\n  ConditionalSlot.displaySymbol = elDisplay;\n  ConditionalSlot.typeSymbol = Symbol();\n  if (parent === undefined) {\n    const If = createConditionalSlot(React.Fragment, ConditionalSlot);\n    const Else = createConditionalSlot(React.Fragment, ConditionalSlot);\n    const ElseIf = createConditionalSlot(React.Fragment, ConditionalSlot);\n    ConditionalSlot.If = If;\n    ConditionalSlot.ElseIf = Else;\n    ConditionalSlot.Else = ElseIf;\n  } else {\n    ConditionalSlot.If = parent.If;\n    ConditionalSlot.ElseIf = parent.Else;\n    ConditionalSlot.Else = parent.ElseIf;\n  }\n  return ConditionalSlot;\n}\n\nconst ConditionalSlotElement: IConditionalSlot = createConditionalSlot();\n\nexport default ConditionalSlotElement;\n"],"sourceRoot":""}