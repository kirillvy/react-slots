{"version":3,"sources":["webpack://react-slots-library/webpack/universalModuleDefinition","webpack://react-slots-library/webpack/bootstrap","webpack://react-slots-library/external \"react\"","webpack://react-slots-library/./src/utils/useChildren.ts","webpack://react-slots-library/./src/ConditionalSlot/index.tsx","webpack://react-slots-library/./src/FilterSlot/index.tsx","webpack://react-slots-library/./src/index.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","scope","undefined","length","Map","childrenCount","Children","count","result","injectSlot","child","index","childType","isValidElement","type","obj","displayName","displaySymbol","resultGet","set","push","forEach","elDisplay","IF","ELSEIF","ELSE","isConditionsComponent","entity","test","evalSlots","arr","childrenObj","every","el","slot","props","slotEvalIf","excludes","includes","condition","include","exclude","conditional","Boolean","createConditionalSlot","Element","typeSymbol","parent","ConditionalSlot","children","elProps","Fragment","newProps","scopeObj","evalResult","res","onIf","pastIf","cur","valid","If","ElseIf","Else","createElement","setTimeout","ConditionalSlotElement","resObject","reduce","prev","React","FilterSlotComponent","grouped","all","includeEls","excludeEls","map","sort","a","b","SubSlot","Context","Consumer","FilterSlot","useChildren","HeaderFooter","renderAs","createSlot","SlottedElement","createContext","Before","Conditional","After","Slot","multiple","defaultProps","passedProps","withContext","fallback","fallbackProps","childIs","defaultElement","Provider","contextChildren","cloneElement","childProps","headersList","footersList","headers","footers","element","filter","SlotFactory","SubSlotFactory","ConditionalSubSlotFactory","contextTypes","propTypes","NonSlotted"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-slots-library\", [\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-slots-library\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-slots-library\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import React from 'react';\nimport {IIndexedChildren, ISortChildrenEl} from '..';\n\n/**\n * Indexes React children for faster access by Slot components\n * @param scope - react children, in any format\n */\nconst useChildren = (scope: any): IIndexedChildren => {\n  if (\n    typeof scope === 'object' &&\n    scope.get !== undefined &&\n    scope.get('$$isSlottedChildren') !== undefined\n  ) {\n    return scope as IIndexedChildren;\n  }\n  if (scope === undefined || scope.length === 0) {\n    return new Map();\n  }\n  const childrenCount = React.Children.count(scope);\n  const result = new Map<symbol | string, ISortChildrenEl[]>();\n  const injectSlot = (child: JSX.Element, index: number) => {\n    let childType = 'string';\n    if (React.isValidElement(child) && child.type !== undefined) {\n      const obj: any = child.type;\n      if (obj.hasOwnProperty('displayName')) {\n        childType = obj.displayName || 'string';\n      } else {\n        childType = obj;\n      }\n      if (obj.hasOwnProperty('displaySymbol')) {\n        childType = obj.displaySymbol;\n      }\n    }\n    const resultGet = result.get(childType);\n    if (resultGet === undefined) {\n      result.set(childType, [{index, child}]);\n    } else {\n      resultGet.push({index, child});\n      result.set(childType, resultGet);\n    }\n  };\n  if (childrenCount === 1) {\n    injectSlot(scope, 0);\n  } else if (childrenCount > 1) {\n      React.Children.forEach(scope, injectSlot);\n  }\n  result.set('$$isSlottedChildren', []);\n  return result;\n};\n\nexport default useChildren;\n","import React from 'react';\nimport { ISlotComponent, IIndexedChildren } from '../index';\nimport useChildren from '../utils/useChildren';\nimport FilterSlot from '../FilterSlot';\n\nexport interface IConditionalSlotBase {\n  children?: any;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope?: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  excludes?: TConditionalSlotArray;\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  includes?: TConditionalSlotArray;\n  /**\n   * Truthy eval of conditions for implementations.\n   */\n  condition?: any;\n}\n\ntype TConditionalSlotArray = Array<ISlotComponent<any> | IConditionsComponent>;\n\nexport interface IConditionsComponent {\n  /**\n   * Slottable component for filtering\n   */\n  slot: ISlotComponent<any>;\n  /**\n   * Slottable component test\n   */\n  test: <T = any>(props: T) => boolean;\n}\n\nexport interface IConditionalSlot<T = {}> extends React.FC<IConditionalSlotBase & T> {\n  If: IConditionalSlot;\n  ElseIf: IConditionalSlot;\n  Else: IConditionalSlot;\n  displaySymbol: symbol;\n  typeSymbol: symbol;\n}\n\nconst elDisplay = Symbol();\nconst IF = Symbol();\nconst ELSEIF = Symbol();\nconst ELSE = Symbol();\n\nexport const isConditionsComponent = (\n  entity: ISlotComponent<any> | IConditionsComponent | IConditionalSlot,\n  ): entity is IConditionsComponent => {\n  return (entity as IConditionsComponent).test !== undefined;\n};\n\nexport const evalSlots = (arr: TConditionalSlotArray, childrenObj: IIndexedChildren) => {\n  return arr.every((el) => {\n    if (isConditionsComponent(el)) {\n      const {slot, test} = el;\n      if (React.isValidElement(slot)) {\n        return childrenObj.get(slot.displaySymbol) !== undefined && test(slot.props) === true;\n      }\n      return false;\n    }\n    return childrenObj.get(el.displaySymbol) !== undefined;\n  });\n};\n\nconst slotEvalIf = ({scope, excludes, includes, condition}: IConditionalSlotBase) => {\n  const childrenObj = useChildren(scope);\n  const include = scope && includes ? evalSlots(includes, childrenObj) : true;\n  const exclude = scope && excludes ? evalSlots(excludes, childrenObj) : true;\n  const conditional = condition !== undefined ? Boolean(condition) : true;\n  return include && exclude && conditional;\n};\n\nexport function createConditionalSlot(\n  Element: React.ComponentType = React.Fragment,\n  typeSymbol: symbol = IF,\n  parent?: IConditionalSlot,\n  ): IConditionalSlot {\n  function ConditionalSlot(props: IConditionalSlotBase) {\n    const {children, scope, excludes, includes, condition, ...newProps} = props;\n    const elProps = Element === React.Fragment ? {} : {scope, ...newProps};\n    const scopeObj = useChildren(children);\n    const evalResult = parent === undefined ? slotEvalIf({scope, excludes, includes, condition}) : true;\n    const obj = scopeObj.get(ConditionalSlot.displaySymbol);\n    let res: React.ReactNode = null;\n    let [onIf, pastIf] = [false, false];\n    if (obj !== undefined) {\n      for (let i = 0; i < obj.length; i++) {\n        const cur: any = obj[i].child;\n        const valid = slotEvalIf(cur.props);\n        if (valid) {\n          res = cur;\n        }\n        if (\n          onIf === false\n          && pastIf === false\n          && cur.type.typeSymbol === ConditionalSlot.If.typeSymbol\n          ) {\n          onIf = true;\n          if (valid) {\n            break;\n          }\n          continue;\n        }\n        if (cur.type.typeSymbol === ConditionalSlot.ElseIf.typeSymbol) {\n          pastIf = true;\n          if (valid) {\n            break;\n          }\n          continue;\n        }\n        if (cur.type.typeSymbol === ConditionalSlot.Else.typeSymbol) {\n          res = cur;\n          break;\n        }\n      }\n    }\n    if (evalResult) {\n      if (onIf && res !== null && res !== undefined) {\n        return React.createElement(Element, elProps,\n          <FilterSlot key={0} scope={children} exclude={[ConditionalSlot]} />,\n          res,\n        );\n      }\n      return React.createElement(Element, elProps,\n        <FilterSlot key={0} scope={children} exclude={[ConditionalSlot]} />,\n      );\n    }\n    if (res !== null && onIf === false) {\n      return React.createElement(Element, elProps,\n        res,\n      );\n    }\n    return null;\n  }\n  ConditionalSlot.displaySymbol = elDisplay;\n  ConditionalSlot.typeSymbol = typeSymbol;\n  if (parent === undefined) {\n    const If = createConditionalSlot(React.Fragment, IF, ConditionalSlot);\n    const Else = createConditionalSlot(React.Fragment, ELSEIF, ConditionalSlot);\n    const ElseIf = createConditionalSlot(React.Fragment, ELSE, ConditionalSlot);\n    ConditionalSlot.If = If;\n    ConditionalSlot.ElseIf = Else;\n    ConditionalSlot.Else = ElseIf;\n  } else {\n    setTimeout(() => {\n      ConditionalSlot.If = parent.If;\n      ConditionalSlot.ElseIf = parent.Else;\n      ConditionalSlot.Else = parent.ElseIf;\n    }, 0);\n  }\n  return ConditionalSlot;\n}\n\nconst ConditionalSlotElement: IConditionalSlot = createConditionalSlot();\n\nexport default ConditionalSlotElement;\n","import * as React from 'react';\nimport { ISlotComponent, IIndexedChildren, ISortChildrenEl } from '../index';\nimport useChildren from '../utils/useChildren';\nimport {\n  IConditionalSlot,\n  IConditionsComponent,\n  isConditionsComponent,\n} from '../ConditionalSlot';\n\ninterface IFilterSlot {\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Array of slottable components for filtering out\n   */\n  exclude?: Array<ISlotComponent<any> | IConditionalSlot | IConditionsComponent>;\n  /**\n   * Array of slottable components whitelisted for not being filtered. Overrides 'exclude'\n   */\n  include?: Array<ISlotComponent<any> | IConditionsComponent>;\n  /**\n   * Filter out all slottable components, overrides include and exclude properties\n   */\n  all?: boolean;\n  /**\n   * Group all elements in order added.\n   */\n  grouped?: boolean;\n}\n\ninterface IFilterSubSlot extends IFilterSlot {\n  scope: React.Context<any>;\n}\n\ninterface IFilterSlotComponent extends React.FC<IFilterSlot> {\n  SubSlot: React.FunctionComponent<IFilterSubSlot>;\n}\n\nconst FilterSlotFactory = (Element: React.FC<IFilterSlot>): React.FC<IFilterSubSlot> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element {...props} scope={value} />}</Context.Consumer>;\n};\n\nexport const resObject = (res?: Array<ISlotComponent<any> | IConditionalSlot | IConditionsComponent>) => {\n  if (res === undefined) {\n    return {};\n  }\n  return res.reduce((prev, el) => {\n    if (isConditionsComponent(el)) {\n      const { slot, test } = el;\n      if (React.isValidElement(slot)) {\n        const childType: string = slot.displaySymbol as any;\n        prev[childType] = (childType !== undefined && test(slot.props) === true);\n      }\n    } else {\n      const childType: string = el.displaySymbol as any;\n      if (prev[childType] === undefined) {\n        prev[childType] = true;\n      }\n    }\n    return prev;\n  }, {} as { [x: string]: boolean });\n};\n\nconst FilterSlotComponent = ({ scope, exclude, include, grouped, all }: IFilterSlot) => {\n  const childrenObj = useChildren(scope);\n  const includeEls = resObject(include);\n  const excludeEls = resObject(exclude);\n  const ignoreSlot = (el: symbol | string) => {\n    if (include) {\n      if (includeEls[el as any]) {\n        return true;\n      }\n      if (typeof el !== 'symbol' && all === true) {\n        return true;\n      }\n      return false;\n    }\n    if (exclude) {\n      if (excludeEls[el as any]) {\n        return false;\n      }\n      return true;\n    }\n  };\n  const prev: ISortChildrenEl[] = [];\n  childrenObj.forEach((value, key) => {\n    const res = ignoreSlot(key);\n    if (res === true) {\n      prev.push(...value);\n    }\n  });\n  if (grouped === true) {\n    return <>{prev.map((el) => el.child)}</>;\n  }\n  const children: JSX.Element[] = prev.sort((a, b) => a.index - b.index)\n    .map((el) => el.child);\n  return <>{children}</>;\n};\n\nFilterSlotComponent.SubSlot = FilterSlotFactory(FilterSlotComponent);\n\nconst FilterSlot: IFilterSlotComponent = FilterSlotComponent;\n\nexport default FilterSlot;\n","import * as React from 'react';\n\nimport ConditionalSlot, {\n  IConditionalSlot, IConditionalSlotBase, createConditionalSlot,\n} from './ConditionalSlot';\nimport useChildren from './utils/useChildren';\n\ninterface ISlot<T> {\n  /**\n   * Default children of element, if any. Otherwise, nothing will be shown.\n   */\n  children?: any;\n  /**\n   * Props that will always be rendered, no matter the scenario\n   */\n  props?: T;\n  /**\n   * default props to use when the default element is rendered\n   */\n  defaultProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * props passed to the element from the component containing the slot\n   */\n  passedProps?: T;\n  /**\n   * Elements or indexed children object passed for filtering\n   */\n  scope: any;\n  /**\n   * Slottable component test\n   */\n  test?: <S = any>(props: S) => boolean;\n  /**\n   * Display all if multiple slots are passed\n   */\n  multiple?: boolean;\n  /**\n   * Components are composed through their immediate children instead of\n   * children of element\n   */\n  withContext?: boolean;\n  /**\n   * fallback to use if slot is not used\n   */\n  fallback?: any;\n  /**\n   * default props to use with default element\n   */\n  fallbackProps?: JSX.IntrinsicAttributes & React.PropsWithChildren<T>;\n  /**\n   * Designate the children prop as the default element, the fallback element or both\n   */\n  childIs?: 'fallback' | 'default' | 'both';\n  /**\n   * Component is always rendered.\n   */\n  unconditional?: boolean;\n}\n\ninterface IRenderAs {\n  /**\n   * Element injected for rendering instead of default. Any props will have to be compatible.\n   */\n  renderAs?: React.ComponentType | keyof JSX.IntrinsicElements;\n}\n\ninterface ISubSlot<T> extends Partial<ISlot<T>> {\n  scope: React.Context<any>;\n}\n\nexport interface ISlotConditional<T> extends React.FunctionComponent<T> {\n  displaySymbol: symbol;\n  Conditional: IConditionalSlot<T>;\n}\n\nexport interface ISubSlotConditional<T> extends React.FunctionComponent<T> {\n  displaySymbol: symbol;\n  Conditional: React.FC<T & IConditionalSlotBase>;\n}\n\nexport interface ISlotComponent<T> extends React.FunctionComponent<T> {\n  Context: React.Context<any>;\n  displaySymbol: symbol;\n  Slot: ISlotConditional<ISlot<T>>;\n  SubSlot: ISubSlotConditional<ISubSlot<T>>;\n  Before: IHeaderFooter;\n  After: IHeaderFooter;\n}\n\ninterface IOverloadCreateSlot {\n  <T extends {}, S extends keyof JSX.IntrinsicElements>(\n    Element?: React.ComponentType<T & Partial<JSX.IntrinsicElements[S]>>,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]> & IRenderAs>;\n  <S extends keyof JSX.IntrinsicElements, T extends {}>(\n    Element?: React.ComponentType<T & Partial<JSX.IntrinsicElements[S]>>,\n  ): ISlotComponent<T & Partial<JSX.IntrinsicElements[S]> & IRenderAs>;\n  <T extends keyof JSX.IntrinsicElements>(\n    Element: T | React.ComponentType<Partial<JSX.IntrinsicElements[T]>>,\n  ): ISlotComponent<Partial<JSX.IntrinsicElements[T]> & IRenderAs>;\n  <T extends {}>(Element?: React.ComponentType): ISlotComponent<T & IRenderAs>;\n}\n\ninterface IHeaderFooter extends React.FunctionComponent {\n  displaySymbol: symbol;\n  typeSymbol: symbol;\n  Conditional: IConditionalSlot;\n}\n\nexport type IIndexedChildren = Map<symbol | string, ISortChildrenEl[]>;\n\nexport interface ISortChildrenEl {\n  index: number;\n  child: JSX.Element;\n}\n\ntype SlotType<T = {}, S = {}> =\n  T extends {} ? S extends keyof JSX.IntrinsicElements ? T & Partial<JSX.IntrinsicElements[S]> : T :\n  T extends keyof JSX.IntrinsicElements ? S extends {} ? S & Partial<JSX.IntrinsicElements[T]> :\n   Partial<JSX.IntrinsicElements[T]> : any;\n\nconst SlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISlot<T>> => (\n  { scope, children: defaultElement, multiple = false, defaultProps, passedProps, withContext,\n    fallback, fallbackProps, props, childIs, test },\n) => {\n  const childrenObj = useChildren(scope);\n  const injectSlot = (child: JSX.Element, i?: number) => {\n    if (withContext === true  && defaultElement !== undefined) {\n      if (childIs === 'fallback') {\n        return null;\n      }\n      if (Element.Context.Provider === undefined) {\n        return null;\n      }\n      const contextChildren = React.cloneElement(child, {...props, ...passedProps });\n      return React.cloneElement(child, { key: i, ...props, ...passedProps }, (\n      <Element.Context.Provider\n        key={i}\n        value={useChildren(contextChildren.props.children)}\n      >\n      {defaultElement}\n      </Element.Context.Provider>\n      ));\n    }\n    const childProps: any = child.props;\n    if (child.props === undefined) {\n      return child;\n    }\n    if (childProps.hasOwnProperty('children')) {\n      return React.cloneElement(child, { key: i, ...props, ...passedProps });\n    } else {\n      return React.cloneElement(child, { key: i, ...props, ...defaultProps, ...passedProps }, defaultElement);\n    }\n  };\n  const res = childrenObj.get(Element.displaySymbol);\n  const headersList = childrenObj.get(Element.Before.displaySymbol) || [];\n  const footersList = childrenObj.get(Element.After.displaySymbol) || [];\n  const headers = headersList.map((el) => el.child);\n  const footers = footersList.map((el) => el.child);\n  if (res === undefined) {\n    if ((childIs === 'fallback' || childIs === 'both') && defaultElement !== undefined) {\n      return React.cloneElement(defaultElement, fallbackProps);\n    }\n    if (fallback !== undefined) {\n      return React.cloneElement(fallback, fallbackProps);\n    }\n    return <>{headers}{footers}</>;\n  } else {\n    if (multiple === true) {\n      let element = res.reduce((prev, {index, child}) => {\n        const el = injectSlot(child, index);\n        if (el !== null) {\n          prev.push(el);\n        }\n        return prev;\n      }, [] as Array<React.FunctionComponentElement<any>>);\n      if (test !== undefined) {\n        element = element.filter((el) => test(el.props));\n      }\n      return <>{headers}{element}{footers}</>;\n    } else {\n      const {child} = res[0];\n      return <>{headers}{injectSlot(child)}{footers}</>;\n    }\n  }\n};\n\nconst SubSlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot {...props} scope={value}/>}</Context.Consumer>;\n};\n\nconst ConditionalSubSlotFactory = <T extends {}>(Element: ISlotComponent<T>): React.FC<ISubSlot<T>> => (\n  { scope: Context, ...props },\n) => {\n  return <Context.Consumer>{(value) => <Element.Slot.Conditional {...props} scope={value}/>}</Context.Consumer>;\n};\n\nconst HeaderFooter: () => React.FC<IRenderAs> = () => (\n  {children, renderAs},\n  ) => React.createElement(renderAs || React.Fragment, {}, children);\n\n/**\n * Slot constructor\n * @param {React.ComponentType<any>} [Element=React.Fragment] - Element for slotting, default is fragment\n */\nexport const createSlot: IOverloadCreateSlot = <T extends {} = {}, S extends {} = {}>(\n  Element: React.ComponentType | keyof JSX.IntrinsicElements = React.Fragment,\n  ) => {\n    type CurType = SlotType<T, S>;\n    const SlottedElement = (\n        (\n          { children, renderAs, ...props }: any,\n        ) => React.createElement(renderAs || Element, props, children)\n      ) as unknown as ISlotComponent<CurType>;\n    SlottedElement.Context = React.createContext(null);\n    SlottedElement.displaySymbol = Symbol();\n    SlottedElement.Before = HeaderFooter() as IHeaderFooter;\n    SlottedElement.Before.displaySymbol = Symbol();\n    SlottedElement.Before.Conditional = createConditionalSlot(SlottedElement.Before as React.ComponentType);\n    SlottedElement.Before.Conditional.displaySymbol = SlottedElement.Before.displaySymbol;\n    SlottedElement.After = HeaderFooter() as IHeaderFooter;\n    SlottedElement.After.displaySymbol = Symbol();\n    SlottedElement.After.Conditional = createConditionalSlot(SlottedElement.After as React.ComponentType);\n    SlottedElement.After.Conditional.displaySymbol = SlottedElement.After.displaySymbol;\n    SlottedElement.Slot = SlotFactory<CurType>(SlottedElement) as ISlotConditional<ISlot<CurType>>;\n    SlottedElement.Slot.displaySymbol = Symbol();\n    SlottedElement.Slot.Conditional = createConditionalSlot(SlottedElement.Slot as React.ComponentType);\n    SlottedElement.SubSlot = SubSlotFactory<CurType>(SlottedElement) as ISlotConditional<ISubSlot<CurType>>;\n    SlottedElement.SubSlot.displaySymbol = Symbol();\n    SlottedElement.SubSlot.Conditional = ConditionalSubSlotFactory<CurType>(SlottedElement);\n    if (typeof Element !== 'string') {\n      SlottedElement.defaultProps = Element.defaultProps;\n      SlottedElement.contextTypes = Element.contextTypes;\n      SlottedElement.Slot.displayName = `${Element.displayName}.Slot`;\n      SlottedElement.propTypes = Element.propTypes;\n      if (Element.displayName === undefined) {\n        SlottedElement.Slot.displayName = 'Subcomponent.Slot';\n      }\n    } else {\n      SlottedElement.Slot.displayName = `${Element}.Slot`;\n      SlottedElement.displayName = `${SlottedElement.displayName}.SlottedElement`;\n      if (Element === undefined) {\n        SlottedElement.Slot.displayName = 'Subcomponent.Slot';\n        SlottedElement.displayName = `Subcomponent.SlottedElement`;\n      }\n    }\n    SlottedElement.SubSlot.displayName = 'SubSlot';\n    SlottedElement.SubSlot.displayName = 'SubSlot';\n    return SlottedElement;\n};\n\nimport FilterSlot from './FilterSlot';\nexport { FilterSlot as NonSlotted };\nexport { FilterSlot as FilterSlot, useChildren, ConditionalSlot };\n\nexport default createSlot;\n"],"sourceRoot":""}